{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LavanyaChakriMoksha\\\\react-list-app\\\\src\\\\home\\\\Home.jsx\";\nimport React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData(selectedPage + 1);\n        console.log(\"currentPage: \", this.state.currentPage);\n        window.sessionStorage.setItem(\"current\", this.state.currentPage);\n      });\n    };\n\n    this.state = {\n      datalist: [],\n      offset: 0,\n      postData: [],\n      perPage: 20,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (window.sessionStorage.getItem(\"current\")) {\n      console.log(\"llll: \", window.sessionStorage.getItem(\"current\")); // const offset = window.sessionStorage.getItem('current') * this.state.perPage;\n\n      this.setState({\n        currentPage: parseInt(window.sessionStorage.getItem(\"current\")) // offset: offset\n\n      }, () => {\n        this.receivedData();\n      });\n    } else {\n      this.receivedData();\n    }\n  }\n\n  receivedData(pagecount) {\n    const requestOptions = {\n      method: \"POST\"\n    };\n    fetch(\"http://nyx.vima.ekt.gr:3000/api/books?page=\" + pagecount + \"&itemsPerPage=20\", requestOptions).then(response => response.json()).then(res => {\n      //const data = res.books;\n      const slice = res.count.slice(this.state.offset, this.state.offset + this.state.perPage); //console.log(\"data: \",slice);\n\n      const postData = res.books.map((pd, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, pd.book_title));\n      this.setState({\n        pageCount: slice,\n        postData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"page-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.state.postData), /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      forcePage: this.state.currentPage,\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.handlePageClick,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport { Home };","map":{"version":3,"sources":["C:/Users/LavanyaChakriMoksha/react-list-app/src/home/Home.jsx"],"names":["React","ReactPaginate","Home","Component","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","console","log","window","sessionStorage","setItem","datalist","postData","bind","componentDidMount","getItem","parseInt","pagecount","requestOptions","method","fetch","then","response","json","res","slice","count","books","map","pd","index","book_title","pageCount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datalist: [],\n      offset: 0,\n      postData: [],\n      perPage: 20,\n      currentPage: 0,\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (window.sessionStorage.getItem(\"current\")) {\n      console.log(\"llll: \", window.sessionStorage.getItem(\"current\"));\n      // const offset = window.sessionStorage.getItem('current') * this.state.perPage;\n      this.setState(\n        {\n          currentPage: parseInt(window.sessionStorage.getItem(\"current\")),\n          // offset: offset\n        },\n        () => {\n          this.receivedData();\n        }\n      );\n    } else {\n      this.receivedData();\n    }\n  }\n  receivedData(pagecount) {\n    const requestOptions = {\n      method: \"POST\",\n    };\n    fetch(\n      \"http://nyx.vima.ekt.gr:3000/api/books?page=\" +\n        pagecount +\n        \"&itemsPerPage=20\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        //const data = res.books;\n        const slice = res.count.slice(\n          this.state.offset,\n          this.state.offset + this.state.perPage\n        );\n        //console.log(\"data: \",slice);\n        const postData = res.books.map((pd, index) => (\n          <li key={index}>{pd.book_title}</li>\n        ));\n\n        this.setState({\n          pageCount: slice,\n\n          postData,\n        });\n      });\n  }\n  handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState(\n      {\n        currentPage: selectedPage,\n        offset: offset,\n      },\n      () => {\n        this.receivedData(selectedPage + 1);\n        console.log(\"currentPage: \", this.state.currentPage);\n        window.sessionStorage.setItem(\"current\", this.state.currentPage);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <ul className=\"page-list\">{this.state.postData}</ul>\n        <ReactPaginate\n          previousLabel={\"prev\"}\n          nextLabel={\"next\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          forcePage={this.state.currentPage}\n          pageCount={this.state.pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={\"pagination\"}\n          subContainerClassName={\"pages pagination\"}\n          activeClassName={\"active\"}\n        />\n      </div>\n    );\n  }\n}\nexport { Home };\n"]},"metadata":{},"sourceType":"module"}